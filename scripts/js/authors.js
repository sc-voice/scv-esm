#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const { logger } = require("log-instance");

const APP_DIR = path.join(__dirname, "..", "..");
const LOCAL_DIR = path.join(APP_DIR, "local");
const SRC_DIR = path.join(APP_DIR, "src");
const EBT_DATA_DIR = path.join(LOCAL_DIR, "ebt-data");
const EBT_AUTHOR = path.join(EBT_DATA_DIR, "_author.json");
const SCRIPT = path.basename(__filename);
const AUTHORS_PATH = path.join(SRC_DIR, "auto", "authors.mjs");
const { Examples } = require(path.join(APP_DIR, 'index.js'));

const COMMENT = [`Auto-generated by ${SCRIPT}`];

logger.logLevel = "info";

(async function () {
  try {
    let ebtAuthors = JSON.parse(await fs.promises.readFile(EBT_AUTHOR));
    Object.keys(ebtAuthors).forEach(auid => {
      let ea = ebtAuthors[auid];
      let authoredExample = Examples.authors
        .filter(ea => ea.author===auid)[0];
      ea.author = auid;
      if (authoredExample) {
        ea.category = authoredExample.category instanceof Array
          ? authoredExample.category
          : [ authoredExample.category ].sort();
        ea.lang = authoredExample.lang;
        ea.exampleVersion = Number(authoredExample.version);
      } else if (auid === 'ms') {
        ea.exampleVersion = 999999;
        ea.lang = 'pli';
        ea.author = 'ms';
        ea.category = ["sutta", "vinaya"].sort();
      } else {
        ea.exampleVersion = 0;
      }
    });

    let authorJson = JSON.stringify(ebtAuthors, null, 2) + '\n';
    let authorMjs = [
      'const AUTHORS = ' + authorJson,
      'export default AUTHORS;\n',
    ].join('\n');
    await fs.promises.writeFile(AUTHORS_PATH, authorMjs);
    console.log(authorJson);
  } catch (e) {
    logger.warn(e);
  }
})();
